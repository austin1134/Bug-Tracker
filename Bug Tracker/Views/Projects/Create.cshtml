@model Bug_Tracker.Models.ProjectUsersViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row">
        <div class="col-xs-12">
            <h2>
                @ViewBag.Title
            </h2>
        </div>
    </div>
    <div class="row">
        @using (Html.BeginForm())
        {
            @Html.HiddenFor(model => model.ProjectId)
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Project Manager", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                  @if (Model != null)
                  {
                      if (User.IsInRole("Admin"))
                      {
                          @Html.DropDownListFor(model => model.SelectedProjectManagerId, Model.ProjectManagers, "--Select Project Manager--", new {@class = "form-control"})
                      }
                      else
                      {
                          @Html.HiddenFor(model => model.SelectedProjectManagerId)
                          @Html.DropDownListFor(model => model.SelectedProjectManagerId, Model.ProjectManagers, "--Select Project Manager--", new {@class = "form-control", disabled = "disabled"})
                      }
                      @Html.ValidationMessageFor(model => model.SelectedProjectManagerId, "", new {@class = "text-danger"})
                  }
                  else
                  {
                      <text>Please Create A Project Manager</text>
                  }
                </div>
            </div>

            <div class="form-group">
                @if (Model != null)
                {
                    @Html.Label("Assigned Developers", htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.ListBoxFor(model => model.SelectedDevelopers, Model.Developers, new {@class = "form-control"})
                        @Html.ValidationMessageFor(model => model.SelectedDevelopers, "", new {@class = "text-danger"})
                    </div>
                }
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create Project" class="btn btn-accent2" />
                </div>
            </div>
        }
    </div>
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
